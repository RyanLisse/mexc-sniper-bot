name: Security & Dependency Management

on:
  schedule:
    # Run daily at 2 AM UTC
    - cron: '0 2 * * *'
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Run security audit
        run: |
          bun audit --json > audit-results.json || true
          
      - name: Upload audit results
        uses: actions/upload-artifact@v4
        with:
          name: security-audit-results
          path: audit-results.json
          retention-days: 30

      - name: Check for high/critical vulnerabilities
        run: |
          HIGH_CRITICAL=$(bun audit --audit-level moderate --json | jq '.metadata.vulnerabilities.high + .metadata.vulnerabilities.critical')
          if [ "$HIGH_CRITICAL" -gt 0 ]; then
            echo "ðŸš¨ Found $HIGH_CRITICAL high/critical vulnerabilities"
            exit 1
          else
            echo "âœ… No high/critical vulnerabilities found"
          fi

  dependency-review:
    name: Dependency Review
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Dependency Review
        uses: actions/dependency-review-action@v4
        with:
          fail-on-severity: moderate
          allow-ghsas: GHSA-jchw-25xp-jwwc,GHSA-cxjh-pqwp-8mfp

  codeql-analysis:
    name: CodeQL Security Analysis
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      packages: read
      actions: read
      contents: read
    
    strategy:
      fail-fast: false
      matrix:
        language: [ 'javascript', 'typescript' ]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}
          queries: +security-and-quality

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Build application
        run: bun run build

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:${{matrix.language}}"

  secret-scanning:
    name: Secret Scanning
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Run TruffleHog OSS
        uses: trufflesecurity/trufflehog@main
        with:
          path: ./
          base: main
          head: HEAD
          extra_args: --debug --only-verified

  license-compliance:
    name: License Compliance Check
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Check licenses
        run: |
          bunx license-checker --summary --production --excludePrivatePackages > license-summary.txt
          bunx license-checker --production --excludePrivatePackages --onlyAllow 'MIT;ISC;Apache-2.0;BSD-2-Clause;BSD-3-Clause;0BSD;Unlicense;WTFPL' || true

      - name: Upload license report
        uses: actions/upload-artifact@v4
        with:
          name: license-compliance-report
          path: license-summary.txt
          retention-days: 30

  security-scorecard:
    name: OSSF Security Scorecard
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      id-token: write
      contents: read
      actions: read
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Run analysis
        uses: ossf/scorecard-action@v2.4.2
        with:
          results_file: results.sarif
          results_format: sarif
          publish_results: true

      - name: Upload SARIF results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: results.sarif

  notify-security-issues:
    name: Notify Security Issues
    runs-on: ubuntu-latest
    needs: [security-audit, codeql-analysis, secret-scanning]
    if: failure() && github.event_name == 'schedule'
    
    steps:
      - name: Create security issue
        uses: actions/github-script@v7
        with:
          script: |
            const now = new Date().toISOString();
            github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `ðŸ”’ Security Scan Alert - ${now}`,
              body: `ðŸš¨ **Security Issues Detected**
              
              **Scan Details:**
              - **Timestamp:** ${now}
              - **Workflow:** Security & Dependency Management
              
              **Issues Found:**
              One or more security scans have failed. Please review the following:
              
              - [ ] Security audit results
              - [ ] CodeQL analysis findings
              - [ ] Secret scanning alerts
              - [ ] License compliance issues
              
              **Action Required:**
              1. Review the [workflow run](${context.payload.repository.html_url}/actions/runs/${context.runId})
              2. Address identified security issues
              3. Update dependencies if necessary
              4. Re-run security scans to verify fixes
              
              **Priority:** High - Please address within 24 hours
              
              This issue was automatically created by the security monitoring pipeline.`,
              labels: ['security', 'automated', 'high-priority'],
              assignees: ['@repository-admins']
            })